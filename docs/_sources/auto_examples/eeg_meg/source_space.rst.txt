
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/eeg_meg/source_space.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_eeg_meg_source_space.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_eeg_meg_source_space.py:


Plot source space
=================

Plot from a .fif file using the :class:`visbrain.mne.mne_plot_source_space`
function

.. image:: ../../_static/examples/ex_eegmeg_plot_source_space.png

.. GENERATED FROM PYTHON SOURCE LINES 11-13

Load .fif file in the MNE-python dataset
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 13-28

.. code-block:: Python

    import os
    import numpy as np

    from mne.datasets import sample

    from visbrain.gui import Brain
    from visbrain.mne import mne_plot_source_space

    # Define path :
    main_path = sample.data_path()
    sbj_dir = os.path.join(*(main_path, 'subjects', 'fsaverage', 'bem'))

    # fif file to load :
    fif_file = os.path.join(sbj_dir, 'fsaverage-ico-5-src.fif')


.. GENERATED FROM PYTHON SOURCE LINES 29-32

Active data
##############################################################################
 Active data defined for illustration.

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: Python

    active_data = np.arange(20484)


.. GENERATED FROM PYTHON SOURCE LINES 35-38

Additional inputs
##############################################################################
 Additional inputs for BrainObj :

.. GENERATED FROM PYTHON SOURCE LINES 38-46

.. code-block:: Python

    kw_b_obj = dict(translucent=False, hemisphere='both')
    # Additional inputs for SourceObj :
    kw_s_obj = dict(color='blue', symbol='square')
    # Additional inputs for activations (colormap, clim...) :
    kw_activation = dict(cmap='viridis', hide_under=10000,
                         clim=(active_data.min(), active_data.max()), vmax=20000,
                         over='red')


.. GENERATED FROM PYTHON SOURCE LINES 47-52

Get the brain and source objects
##############################################################################
 Note that here, we use `show=False`. In that case, a
 :class:`visbrain.objects.BrainObj` and a :class:`visbrain.objects.SourceObj`
 are returned.

.. GENERATED FROM PYTHON SOURCE LINES 52-59

.. code-block:: Python


    b_obj, s_obj = mne_plot_source_space(fif_file, active_data=active_data,
                                         kw_brain_obj=kw_b_obj,
                                         kw_source_obj=kw_s_obj,
                                         kw_activation=kw_activation,
                                         show=False)


.. GENERATED FROM PYTHON SOURCE LINES 60-65

Pass the brain and source objects to the :class:`visbrain.Brain` module
##############################################################################
 Note that here, we pass the source object to Brain but by default we set it
 as not visible. But if you don't need to see it, simply remove the
 `source_obj=s_obj`

.. GENERATED FROM PYTHON SOURCE LINES 65-69

.. code-block:: Python


    s_obj.visible_obj = False
    brain = Brain(brain_obj=b_obj, source_obj=s_obj)
    brain.show()


.. _sphx_glr_download_auto_examples_eeg_meg_source_space.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: source_space.ipynb <source_space.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: source_space.py <source_space.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: source_space.zip <source_space.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
