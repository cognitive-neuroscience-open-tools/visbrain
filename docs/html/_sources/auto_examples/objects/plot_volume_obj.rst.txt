
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/objects/plot_volume_obj.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_objects_plot_volume_obj.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_objects_plot_volume_obj.py:


Volume object (VolumeObj) : complete tutorial
=============================================

Illustration of the main functionalities and inputs of the volume object :

    * Volume rendering methods (MIP, translucent, additive, Iso)
    * Colormap choice
    * Select volume levels
    * Load an MRI (nii.gz) file

.. GENERATED FROM PYTHON SOURCE LINES 12-19

.. code-block:: Python

    from visbrain.objects import VolumeObj, SceneObj
    from visbrain.io import download_file


    # Define the scene
    sc = SceneObj(size=(1000, 600))


.. GENERATED FROM PYTHON SOURCE LINES 20-23

MIP rendering
##############################################################################
 MIP rendering with an opaque fire colormap

.. GENERATED FROM PYTHON SOURCE LINES 23-27

.. code-block:: Python


    v_obj_mip = VolumeObj('brodmann', method='mip', cmap='OpaqueFire')
    sc.add_to_subplot(v_obj_mip, row=0, col=0, title='MIP rendering', zoom=.7)


.. GENERATED FROM PYTHON SOURCE LINES 28-31

Translucent rendering
##############################################################################
 Translucent rendering with a translucent fire colormap

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python


    v_obj_trans = VolumeObj('aal', method='translucent', cmap='TransFire')
    sc.add_to_subplot(v_obj_trans, row=0, col=1, title='Translucent rendering',
                      zoom=.7)


.. GENERATED FROM PYTHON SOURCE LINES 37-40

Additive rendering
##############################################################################
 Additive rendering with a translucent grays colormap

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python


    v_obj_add = VolumeObj('talairach', method='additive', cmap='TransGrays')
    sc.add_to_subplot(v_obj_add, row=0, col=2, title='Additive rendering', zoom=.6)


.. GENERATED FROM PYTHON SOURCE LINES 45-48

Iso rendering
##############################################################################
 Iso rendering. Note that here, no threshold are used

.. GENERATED FROM PYTHON SOURCE LINES 48-52

.. code-block:: Python


    v_obj_iso = VolumeObj('brodmann', method='iso')
    sc.add_to_subplot(v_obj_iso, row=0, col=3, title='Iso rendering', zoom=.7)


.. GENERATED FROM PYTHON SOURCE LINES 53-56

Volume thresholding
##############################################################################
 Similarly to the example above, here, we use a threshold to cut the volume

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: Python


    path = download_file('GG-853-WM-0.7mm.nii.gz', astype='example_data')
    vol_obj_th = VolumeObj(path, method='iso', threshold=.1)
    sc.add_to_subplot(vol_obj_th, row=1, col=0, title='Threshold selection',
                      zoom=.7)


.. GENERATED FROM PYTHON SOURCE LINES 63-67

Select volume levels
##############################################################################
 The volume contains certain levels and you can use the `select` input to
 select only certain levels

.. GENERATED FROM PYTHON SOURCE LINES 67-73

.. code-block:: Python


    v_obj_select = VolumeObj('brodmann', method='iso', cmap='OpaqueFire',
                             select=[4, 6])
    sc.add_to_subplot(v_obj_select, row=1, col=1, zoom=.7,
                      title='Select Brodmann area 4 and 6')


.. GENERATED FROM PYTHON SOURCE LINES 74-76

MRI file : mip rendering
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 76-82

.. code-block:: Python


    path = download_file('GG-853-GM-0.7mm.nii.gz', astype='example_data')
    v_obj_nii = VolumeObj(path, method='mip', cmap='OpaqueGrays', threshold=.7)
    sc.add_to_subplot(v_obj_nii, row=1, col=2, title='MRI file (MIP rendering)',
                      zoom=.7)


.. GENERATED FROM PYTHON SOURCE LINES 83-85

MRI file : translucent rendering
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 85-93

.. code-block:: Python


    path = download_file('GG-853-WM-0.7mm.nii.gz', astype='example_data')
    vol_obj_sec = VolumeObj(path, method='translucent', cmap='TransGrays')
    sc.add_to_subplot(vol_obj_sec, row=1, col=3, zoom=.7,
                      title='MRI file (translucent rendering)')

    # Finally, display the scene
    sc.preview()


.. _sphx_glr_download_auto_examples_objects_plot_volume_obj.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_volume_obj.ipynb <plot_volume_obj.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_volume_obj.py <plot_volume_obj.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_volume_obj.zip <plot_volume_obj.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
