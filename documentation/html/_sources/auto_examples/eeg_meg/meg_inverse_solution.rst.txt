
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/eeg_meg/meg_inverse_solution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_eeg_meg_meg_inverse_solution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_eeg_meg_meg_inverse_solution.py:


Plot MEG inverse solution
=========================

Plot MEG inverse solution.

See the original example :

https://pysurfer.github.io/auto_examples/plot_meg_inverse_solution.html#sphx-glr-auto-examples-plot-meg-inverse-solution-py

.. image:: ../../_static/examples/ex_eegmeg_meg_inverse.png

.. GENERATED FROM PYTHON SOURCE LINES 13-38

.. code-block:: Python

    from visbrain.gui import Brain
    from visbrain.objects import BrainObj
    from visbrain.io import download_file, read_stc

    """Download file if needed :
    """
    stc_file = download_file('meg_source_estimate-lh.stc', astype='example_data')

    # Read the *.stc file :
    file = read_stc(stc_file)

    # Get the data and vertices from the file :
    data = file['data'][:, 2]
    vertices = file['vertices']

    # Define a brain object and add the data to the mesh :
    b_obj = BrainObj('inflated', translucent=False, hemisphere='left')
    b_obj.add_activation(data=data, vertices=vertices, smoothing_steps=15,
                         clim=(13., 22.), hide_under=13., cmap='plasma',
                         hemisphere='left')

    # Finally, pass the brain object to the Brain module :
    vb = Brain(brain_obj=b_obj)
    vb.rotate('left')
    vb.show()


.. _sphx_glr_download_auto_examples_eeg_meg_meg_inverse_solution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: meg_inverse_solution.ipynb <meg_inverse_solution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: meg_inverse_solution.py <meg_inverse_solution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: meg_inverse_solution.zip <meg_inverse_solution.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
