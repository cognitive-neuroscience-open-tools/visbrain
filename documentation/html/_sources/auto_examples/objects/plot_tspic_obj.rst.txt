
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/objects/plot_tspic_obj.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_objects_plot_tspic_obj.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_objects_plot_tspic_obj.py:


Time-series and pictures 3D (TimeSeries3DObj & Picture3DObj): complete tutorial
===============================================================================

Illustration of the main features of 3d time-series and pictures. This
include :

    * Define and plot of spatially distributed time-series (TS) and pictures
    * Masking TS and pictures
    * Custom properties (i.e line width, colors, size...)

.. GENERATED FROM PYTHON SOURCE LINES 12-20

.. code-block:: Python

    import numpy as np

    from scipy.signal import spectrogram

    from visbrain.objects import TimeSeries3DObj, Picture3DObj, SceneObj
    from visbrain.utils import generate_eeg



.. GENERATED FROM PYTHON SOURCE LINES 21-25

Define sample data and scene
##############################################################################
 3D time-series and pictures need to be attached to sources define in a 3D
 space.

.. GENERATED FROM PYTHON SOURCE LINES 25-41

.. code-block:: Python


    # Define 5 sources
    xyz = np.array([[0, .5, 0], [1, -4, 3], [10, 2, 8], [1, 7, 12], [-4, 5, 6]])
    n_sources = xyz.shape[0]
    # Define the time-series of those 5 sources
    ts_data = generate_eeg(sf=512., n_channels=n_sources, noise=5., smooth=5)[0]
    # Compute the spectrogram of the 5 time-series
    pic_data = []
    for k in range(n_sources):
        pic_data += [spectrogram(ts_data[k, :], 512., nperseg=128, noverlap=10)[2]]
    pic_data = np.asarray(pic_data)
    clim = (.01 * pic_data.min(), .01 * pic_data.max())

    # Scene definition
    sc = SceneObj()


.. GENERATED FROM PYTHON SOURCE LINES 42-45

Basic plot
##############################################################################
 Basic plot without further customizations

.. GENERATED FROM PYTHON SOURCE LINES 45-53

.. code-block:: Python


    # Define time-series and picture objects
    ts_0 = TimeSeries3DObj('t0', ts_data, xyz, antialias=True)
    pic_0 = Picture3DObj('p0', pic_data, xyz, clim=clim)
    # Add those objects to the scene
    sc.add_to_subplot(ts_0, row=0, col=0, zoom=.2, title='Basic 3D TS plot')
    sc.add_to_subplot(pic_0, row=0, col=1, zoom=.5, title='Basic 3D pictures plot')


.. GENERATED FROM PYTHON SOURCE LINES 54-58

Subset selection
##############################################################################
 Select a subset of time-series and pictures using either a list of intergers
 or booleans

.. GENERATED FROM PYTHON SOURCE LINES 58-70

.. code-block:: Python


    # Define a select variables using either intergers or boolean values
    s_ts = [0, 2, 4]
    s_pic = [True, False, True, False, True]
    # Define time-series and picture objects
    ts_1 = TimeSeries3DObj('t1', ts_data, xyz, antialias=True, select=s_ts)
    pic_1 = Picture3DObj('p1', pic_data, xyz, clim=clim, select=s_pic, cmap='bwr')
    # Add those objects to the scene
    sc.add_to_subplot(ts_1, row=1, col=0, zoom=.2, title='Select a TS subset')
    sc.add_to_subplot(pic_1, row=1, col=1, zoom=.5,
                      title='Select a subject of pictures')


.. GENERATED FROM PYTHON SOURCE LINES 71-74

Shape and color properties
##############################################################################
 Customize colors, time-series amplitude and width, pictures height and width

.. GENERATED FROM PYTHON SOURCE LINES 74-88

.. code-block:: Python


    # Define time-series and picture objects
    ts_2 = TimeSeries3DObj('t2', ts_data, xyz, antialias=True, color='slateblue',
                           line_width=2., ts_amp=4, ts_width=10)
    pic_2 = Picture3DObj('p2', pic_data, xyz, clim=clim, cmap='Spectral_r',
                         pic_width=10, pic_height=15)
    # Add those objects to the scene
    sc.add_to_subplot(ts_2, row=2, col=0, zoom=.2,
                      title='Custom TS color and shape')
    sc.add_to_subplot(pic_2, row=2, col=1, zoom=.5,
                      title='Custom picture color and shape')

    # Finally, display the scene
    sc.preview()


.. _sphx_glr_download_auto_examples_objects_plot_tspic_obj.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_tspic_obj.ipynb <plot_tspic_obj.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_tspic_obj.py <plot_tspic_obj.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_tspic_obj.zip <plot_tspic_obj.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
